Index: verveine.core/mse/famix30_complete.mse
===================================================================
--- verveine.core/mse/famix30_complete.mse	(revision 84)
+++ verveine.core/mse/famix30_complete.mse	(revision 85)
@@ -1,987 +1,1017 @@
- (+(
 	(FM3.Package (id: 1)-		(name 'FILE')+		(name 'Hismo')
 		(classes 			(FM3.Class (id: 2)-				(name 'FileGroup')+				(name 'HismoEntityVersion')
 				(package (ref: 1)) 				(superclass (ref: 3))) 			(FM3.Class (id: 4)-				(name 'Folder')+				(name 'HismoInvocationHistory')
 				(package (ref: 1)) 				(superclass (ref: 5)))-			(FM3.Class (id: 6)-				(name 'File')+			(FM3.Class (id: 3)
+				(name 'HismoAbstractVersion')
 				(package (ref: 1))-				(superclass (ref: 5)))+				(superclass (ref: 6)))
 			(FM3.Class (id: 7)-				(name 'FolderGroup')+				(name 'HismoClassHierarchy')
 				(package (ref: 1))-				(superclass (ref: 3)))+				(superclass (ref: 5)))
+			(FM3.Class (id: 8)
+				(name 'HismoNamespaceHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 9)
+				(name 'HismoCoChangeHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 10)
+				(name 'HismoMethodHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 11)
+				(name 'HismoAttributeHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 12)
+				(name 'HismoFileHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 13)
+				(name 'HismoFolderHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 14)
+				(name 'HismoInheritanceDefinitionHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 15)
+				(name 'HismoModelHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 16)
+				(name 'HismoClassHistoryGroup')
+				(package (ref: 1))
+				(superclass (ref: 17)))
+			(FM3.Class (id: 17)
+				(name 'HismoHistoryGroup')
+				(package (ref: 1))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 19)
+				(name 'HismoCoChangePattern')
+				(package (ref: 1))
+				(superclass (ref: 18)))
 			(FM3.Class (id: 5)-				(name 'AbstractFile')+				(name 'HismoAbstractHistory')
+				(package (ref: 1))
+				(superclass (ref: 6)))
+			(FM3.Class (id: 20)
+				(name 'HismoPackageHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 21)
+				(name 'HismoNamespaceVersion')
+				(package (ref: 1))
+				(superclass (ref: 2)))
+			(FM3.Class (id: 22)
+				(name 'HismoClassHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 23)
+				(name 'HismoCoChangeVersion')
+				(package (ref: 1))
+				(superclass (ref: 3)))
+			(FM3.Class (id: 24)
+				(name 'HismoNamespaceHistoryGroup')
+				(package (ref: 1))
+				(superclass (ref: 17)))
+			(FM3.Class (id: 25)
+				(name 'HismoMethodHistoryGroup')
+				(package (ref: 1))
+				(superclass (ref: 17)))
+			(FM3.Class (id: 26)
+				(name 'HismoAccessHistory')
+				(package (ref: 1))
+				(superclass (ref: 5)))
+			(FM3.Class (id: 27)
+				(name 'HismoMethodVersion')
+				(package (ref: 1))
+				(superclass (ref: 2)))
+			(FM3.Class (id: 28)
+				(name 'HismoClassVersion')
 				(package (ref: 1))-				(superclass (ref: 8))+				(superclass (ref: 2)))))
+	(FM3.Package (id: 29)
+		(name 'FILE')
+		(classes
+			(FM3.Class (id: 30)
+				(name 'Folder')
+				(package (ref: 29))
+				(superclass (ref: 31)))
+			(FM3.Class (id: 32)
+				(name 'File')
+				(package (ref: 29))
+				(superclass (ref: 31)))
+			(FM3.Class (id: 33)
+				(name 'FileGroup')
+				(package (ref: 29))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 31)
+				(name 'AbstractFile')
+				(package (ref: 29))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 9)+					(FM3.Property (id: 34)
 						(name 'name')-						(class (ref: 5))+						(class (ref: 31))
+						(type (ref: String)))))
+			(FM3.Class (id: 35)
+				(name 'FolderGroup')
+				(package (ref: 29))
+				(superclass (ref: 18)))))
+	(FM3.Package (id: 36)
+		(name 'Moose')
+		(classes
+			(FM3.Class (id: 18)
+				(name 'Group')
+				(package (ref: 36))
+				(superclass (ref: 37)))
+			(FM3.Class (id: 38)
+				(name 'Entity')
+				(abstract true)
+				(package (ref: 36))
+				(superclass (ref: Object)))
+			(FM3.Class (id: 37)
+				(name 'AbsractGroup')
+				(abstract true)
+				(package (ref: 36))
+				(superclass (ref: 38)))
+			(FM3.Class (id: 39)
+				(name 'Model')
+				(package (ref: 36))
+				(superclass (ref: 37))
+				(attributes
+					(FM3.Property (id: 40)
+						(name 'sourceLanguage')
+						(class (ref: 39))
 						(type (ref: String)))))))-	(FM3.Package (id: 10)+	(FM3.Package (id: 41)
 		(name 'FAMIX') 		(classes-			(FM3.Class (id: 11)-				(name 'ClassGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 12)-				(name 'Parameter')-				(package (ref: 10))-				(superclass (ref: 13))+			(FM3.Class (id: 42)
+				(name 'ImplicitVariable')
+				(package (ref: 41))
+				(superclass (ref: 43))
 				(attributes-					(FM3.Property (id: 14)-						(name 'parentBehaviouralEntity')-						(class (ref: 12))-						(opposite (ref: 15))-						(type (ref: 16)))))-			(FM3.Class (id: 16)-				(name 'BehaviouralEntity')-				(package (ref: 10))-				(superclass (ref: 17))+					(FM3.Property (id: 44)
+						(name 'container')
+						(class (ref: 42))
+						(type (ref: 45)))))
+			(FM3.Class (id: 46)
+				(name 'FileAnchor')
+				(package (ref: 41))
+				(superclass (ref: 47))
 				(attributes-					(FM3.Property (id: 18)-						(name 'declaredType')-						(class (ref: 16))-						(type (ref: 19)))-					(FM3.Property (id: 20)-						(name 'outgoingInvocations')-						(class (ref: 16))-						(derived true)-						(multivalued true)-						(opposite (ref: 21))-						(type (ref: 22)))-					(FM3.Property (id: 23)-						(name 'signature')-						(class (ref: 16))+					(FM3.Property (id: 48)
+						(name 'fileName')
+						(class (ref: 46))
 						(type (ref: String)))-					(FM3.Property (id: 24)-						(name 'localVariables')-						(class (ref: 16))-						(derived true)-						(multivalued true)-						(opposite (ref: 25))-						(type (ref: 26)))-					(FM3.Property (id: 27)-						(name 'accesses')-						(class (ref: 16))-						(derived true)-						(multivalued true)-						(opposite (ref: 28))-						(type (ref: 29)))-					(FM3.Property (id: 30)-						(name 'incomingInvocations')-						(class (ref: 16))-						(derived true)-						(multivalued true)-						(opposite (ref: 31))-						(type (ref: 22)))-					(FM3.Property (id: 15)-						(name 'parameters')-						(class (ref: 16))-						(derived true)-						(multivalued true)-						(opposite (ref: 14))-						(type (ref: 12)))))-			(FM3.Class (id: 32)-				(name 'ParameterizableClass')-				(package (ref: 10))-				(superclass (ref: 33))+					(FM3.Property (id: 49)
+						(name 'startLine')
+						(class (ref: 46))
+						(type (ref: Number)))
+					(FM3.Property (id: 50)
+						(name 'endLine')
+						(class (ref: 46))
+						(type (ref: Number)))))
+			(FM3.Class (id: 51)
+				(name 'Access')
+				(package (ref: 41))
+				(superclass (ref: 52))
 				(attributes-					(FM3.Property (id: 34)-						(name 'parameters')-						(class (ref: 32))+					(FM3.Property (id: 53)
+						(name 'isWrite')
+						(class (ref: 51))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 54)
+						(name 'variable')
+						(class (ref: 51))
+						(opposite (ref: 55))
+						(type (ref: 43)))
+					(FM3.Property (id: 56)
+						(name 'accessor')
+						(class (ref: 51))
+						(opposite (ref: 57))
+						(type (ref: 58)))
+					(FM3.Property (id: 59)
+						(name 'isRead')
+						(class (ref: 51))
 						(derived true)-						(multivalued true)-						(type (ref: 35)))))-			(FM3.Class (id: 36)-				(name 'PrimitiveType')-				(package (ref: 10))-				(superclass (ref: 19)))-			(FM3.Class (id: 8)-				(name 'Entity')-				(package (ref: 10))-				(superclass (ref: Object))+						(type (ref: Boolean)))))
+			(FM3.Class (id: 60)
+				(name 'NamedEntity')
+				(package (ref: 41))
+				(superclass (ref: 61))
 				(attributes-					(FM3.Property (id: 37)-						(name 'annotationInstances')-						(class (ref: 8))+					(FM3.Property (id: 62)
+						(name 'isStub')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 63)
+						(name 'isAbstract')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 64)
+						(name 'name')
+						(class (ref: 60))
+						(type (ref: String)))
+					(FM3.Property (id: 65)
+						(name 'parentPackage')
+						(class (ref: 60))
+						(opposite (ref: 66))
+						(type (ref: 67)))
+					(FM3.Property (id: 68)
+						(name 'modifiers')
+						(class (ref: 60))
+						(multivalued true)
+						(type (ref: String)))
+					(FM3.Property (id: 69)
+						(name 'isProtected')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 70)
+						(name 'belongsTo')
+						(class (ref: 60))
+						(derived true)
+						(type (ref: 71)))
+					(FM3.Property (id: 72)
+						(name 'isPackage')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 73)
+						(name 'isPublic')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 74)
+						(name 'isPrivate')
+						(class (ref: 60))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 75)
+						(name 'receivingInvocations')
+						(class (ref: 60))
 						(derived true) 						(multivalued true)-						(opposite (ref: 38))-						(type (ref: 39)))))-			(FM3.Class (id: 40)+						(opposite (ref: 76))
+						(type (ref: 77)))
+					(FM3.Property (id: 78)
+						(name 'isFinal')
+						(class (ref: 60))
+						(type (ref: Boolean)))))
+			(FM3.Class (id: 79)
 				(name 'Comment')-				(package (ref: 10))-				(superclass (ref: 41))+				(package (ref: 41))
+				(superclass (ref: 61))
 				(attributes-					(FM3.Property (id: 42)+					(FM3.Property (id: 80)
 						(name 'content')-						(class (ref: 40))+						(class (ref: 79))
 						(type (ref: String)))-					(FM3.Property (id: 43)+					(FM3.Property (id: 81)
 						(name 'container')-						(class (ref: 40))-						(opposite (ref: 44))-						(type (ref: 41)))))-			(FM3.Class (id: 35)-				(name 'ParameterType')-				(package (ref: 10))-				(superclass (ref: 19)))-			(FM3.Class (id: 45)-				(name 'NamespaceGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 46)-				(name 'ParameterizedType')-				(package (ref: 10))-				(superclass (ref: 19))+						(class (ref: 79))
+						(opposite (ref: 82))
+						(type (ref: 61)))))
+			(FM3.Class (id: 83)
+				(name 'GlobalVariable')
+				(package (ref: 41))
+				(superclass (ref: 43))
 				(attributes-					(FM3.Property (id: 47)-						(name 'arguments')-						(class (ref: 46))-						(multivalued true)-						(type (ref: 19)))-					(FM3.Property (id: 48)-						(name 'parameterizableClass')-						(class (ref: 46))-						(type (ref: 32)))))-			(FM3.Class (id: 49)-				(name 'AnnotationType')-				(package (ref: 10))-				(superclass (ref: 50))+					(FM3.Property (id: 84)
+						(name 'parentScope')
+						(class (ref: 83))
+						(type (ref: 85)))
+					(FM3.Property (id: 86)
+						(name 'parentModule')
+						(class (ref: 83))
+						(opposite (ref: 87))
+						(type (ref: 88)))))
+			(FM3.Class (id: 89)
+				(name 'ThrownException')
+				(package (ref: 41))
+				(superclass (ref: 90))
 				(attributes-					(FM3.Property (id: 51)-						(name 'container')-						(class (ref: 49))-						(opposite (ref: 52))-						(type (ref: 17)))-					(FM3.Property (id: 53)-						(name 'instances')-						(class (ref: 49))+					(FM3.Property (id: 91)
+						(name 'definingMethod')
+						(class (ref: 89))
+						(opposite (ref: 92))
+						(type (ref: 93)))))
+			(FM3.Class (id: 94)
+				(name 'ParameterizableClass')
+				(package (ref: 41))
+				(superclass (ref: 95))
+				(attributes
+					(FM3.Property (id: 96)
+						(name 'parameters')
+						(class (ref: 94))
 						(derived true) 						(multivalued true)-						(opposite (ref: 54))-						(type (ref: 39)))-					(FM3.Property (id: 55)+						(type (ref: 97)))))
+			(FM3.Class (id: 98)
+				(name 'AnnotationInstance')
+				(package (ref: 41))
+				(superclass (ref: 6))
+				(attributes
+					(FM3.Property (id: 99)
+						(name 'annotationType')
+						(class (ref: 98))
+						(opposite (ref: 100))
+						(type (ref: 101)))
+					(FM3.Property (id: 102)
+						(name 'annotatedEntity')
+						(class (ref: 98))
+						(opposite (ref: 103))
+						(type (ref: 6)))
+					(FM3.Property (id: 104)
 						(name 'attributes')-						(class (ref: 49))+						(class (ref: 98))
 						(derived true) 						(multivalued true)-						(opposite (ref: 56))-						(type (ref: 57)))))-			(FM3.Class (id: 58)-				(name 'Attribute')-				(package (ref: 10))-				(superclass (ref: 13))+						(opposite (ref: 105))
+						(type (ref: 106)))))
+			(FM3.Class (id: 107)
+				(name 'LocalVariable')
+				(package (ref: 41))
+				(superclass (ref: 43))
 				(attributes-					(FM3.Property (id: 59)-						(name 'hasClassScope')-						(class (ref: 58))-						(type (ref: Boolean)))-					(FM3.Property (id: 60)-						(name 'parentType')-						(class (ref: 58))-						(opposite (ref: 61))-						(type (ref: 19)))))-			(FM3.Class (id: 62)-				(name 'DeclaredException')-				(package (ref: 10))-				(superclass (ref: 63))+					(FM3.Property (id: 108)
+						(name 'parentBehaviouralEntity')
+						(class (ref: 107))
+						(opposite (ref: 109))
+						(type (ref: 58)))))
+			(FM3.Class (id: 61)
+				(name 'SourcedEntity')
+				(package (ref: 41))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 64)-						(name 'definingMethod')-						(class (ref: 62))-						(opposite (ref: 65))-						(type (ref: 66)))))-			(FM3.Class (id: 67)-				(name 'UnknownVariable')-				(package (ref: 10))-				(superclass (ref: 13)))-			(FM3.Class (id: 68)-				(name 'Inheritance')-				(package (ref: 10))-				(superclass (ref: 69))-				(attributes-					(FM3.Property (id: 70)-						(name 'superclass')-						(class (ref: 68))-						(opposite (ref: 71))-						(type (ref: 19)))-					(FM3.Property (id: 72)-						(name 'subclass')-						(class (ref: 68))-						(opposite (ref: 73))-						(type (ref: 19)))))-			(FM3.Class (id: 69)+					(FM3.Property (id: 82)
+						(name 'comments')
+						(class (ref: 61))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 81))
+						(type (ref: 79)))
+					(FM3.Property (id: 110)
+						(name 'declaredSourceLanguage')
+						(class (ref: 61))
+						(opposite (ref: 111))
+						(type (ref: 112)))
+					(FM3.Property (id: 113)
+						(name 'sourceAnchor')
+						(class (ref: 61))
+						(opposite (ref: 114))
+						(type (ref: 47)))))
+			(FM3.Class (id: 52)
 				(name 'Association')-				(package (ref: 10))-				(superclass (ref: 41))+				(package (ref: 41))
+				(superclass (ref: 61))
 				(attributes-					(FM3.Property (id: 74)-						(name 'from')-						(class (ref: 69))-						(derived true)-						(type (ref: 50)))-					(FM3.Property (id: 75)+					(FM3.Property (id: 115)
 						(name 'next')-						(class (ref: 69))+						(class (ref: 52))
 						(derived true)-						(opposite (ref: 76))-						(type (ref: 69)))-					(FM3.Property (id: 77)+						(opposite (ref: 116))
+						(type (ref: 52)))
+					(FM3.Property (id: 117)
 						(name 'to')-						(class (ref: 69))+						(class (ref: 52))
 						(derived true)-						(type (ref: 50)))-					(FM3.Property (id: 76)+						(type (ref: 60)))
+					(FM3.Property (id: 116)
 						(name 'previous')-						(class (ref: 69))-						(opposite (ref: 75))-						(type (ref: 69)))))-			(FM3.Class (id: 13)-				(name 'StructuralEntity')-				(package (ref: 10))-				(superclass (ref: 78))-				(attributes-					(FM3.Property (id: 79)-						(name 'declaredType')-						(class (ref: 13))-						(type (ref: 19)))-					(FM3.Property (id: 80)-						(name 'incomingAccesses')-						(class (ref: 13))+						(class (ref: 52))
+						(opposite (ref: 115))
+						(type (ref: 52)))
+					(FM3.Property (id: 118)
+						(name 'from')
+						(class (ref: 52))
 						(derived true)-						(multivalued true)-						(opposite (ref: 81))-						(type (ref: 29)))))-			(FM3.Class (id: 82)-				(name 'SmalltalkSourceLanguage')-				(package (ref: 10))-				(superclass (ref: 83)))-			(FM3.Class (id: 39)-				(name 'AnnotationInstance')-				(package (ref: 10))-				(superclass (ref: 8))+						(type (ref: 60)))))
+			(FM3.Class (id: 119)
+				(name 'SourceTextAnchor')
+				(package (ref: 41))
+				(superclass (ref: 47)))
+			(FM3.Class (id: 77)
+				(name 'Invocation')
+				(package (ref: 41))
+				(superclass (ref: 52))
 				(attributes-					(FM3.Property (id: 84)-						(name 'attributes')-						(class (ref: 39))-						(derived true)+					(FM3.Property (id: 120)
+						(name 'sender')
+						(class (ref: 77))
+						(opposite (ref: 121))
+						(type (ref: 58)))
+					(FM3.Property (id: 122)
+						(name 'signature')
+						(class (ref: 77))
+						(type (ref: String)))
+					(FM3.Property (id: 123)
+						(name 'candidates')
+						(class (ref: 77))
 						(multivalued true)-						(type (ref: 85)))-					(FM3.Property (id: 38)-						(name 'annotatedEntity')-						(class (ref: 39))-						(opposite (ref: 37))-						(type (ref: 8)))-					(FM3.Property (id: 54)-						(name 'annotationType')-						(class (ref: 39))-						(opposite (ref: 53))-						(type (ref: 49)))))-			(FM3.Class (id: 86)-				(name 'GlobalVariable')-				(package (ref: 10))-				(superclass (ref: 13))+						(opposite (ref: 124))
+						(type (ref: 58)))
+					(FM3.Property (id: 76)
+						(name 'receiver')
+						(class (ref: 77))
+						(opposite (ref: 75))
+						(type (ref: 60)))
+					(FM3.Property (id: 125)
+						(name 'receiverSourceCode')
+						(class (ref: 77))
+						(type (ref: String)))))
+			(FM3.Class (id: 106)
+				(name 'AnnotationInstanceAttribute')
+				(package (ref: 41))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 87)-						(name 'parentScope')-						(class (ref: 86))-						(opposite (ref: 88))-						(type (ref: 89)))-					(FM3.Property (id: 90)-						(name 'parentModule')-						(class (ref: 86))-						(type (ref: 91)))))-			(FM3.Class (id: 63)+					(FM3.Property (id: 126)
+						(name 'value')
+						(class (ref: 106))
+						(type (ref: String)))
+					(FM3.Property (id: 127)
+						(name 'annotationTypeAttribute')
+						(class (ref: 106))
+						(opposite (ref: 128))
+						(type (ref: 129)))
+					(FM3.Property (id: 105)
+						(name 'parentAnnotationInstance')
+						(class (ref: 106))
+						(opposite (ref: 104))
+						(type (ref: 98)))))
+			(FM3.Class (id: 130)
+				(name 'ClassGroup')
+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 131)
+				(name 'SmalltalkSourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 112)))
+			(FM3.Class (id: 132)
+				(name 'Reference')
+				(package (ref: 41))
+				(superclass (ref: 52))
+				(attributes
+					(FM3.Property (id: 133)
+						(name 'target')
+						(class (ref: 132))
+						(opposite (ref: 134))
+						(type (ref: 71)))
+					(FM3.Property (id: 135)
+						(name 'source')
+						(class (ref: 132))
+						(opposite (ref: 136))
+						(type (ref: 71)))))
+			(FM3.Class (id: 137)
+				(name 'PrimitiveType')
+				(package (ref: 41))
+				(superclass (ref: 45)))
+			(FM3.Class (id: 90)
 				(name 'Exception')-				(package (ref: 10))-				(superclass (ref: 8))+				(package (ref: 41))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 92)+					(FM3.Property (id: 138)
 						(name 'exceptionClass')-						(class (ref: 63))-						(type (ref: 33)))))-			(FM3.Class (id: 93)-				(name 'EnumValue')-				(package (ref: 10))-				(superclass (ref: 50))-				(attributes-					(FM3.Property (id: 94)-						(name 'parentEnum')-						(class (ref: 93))+						(class (ref: 90))
 						(type (ref: 95)))))-			(FM3.Class (id: 96)-				(name 'FileAnchor')-				(package (ref: 10))-				(superclass (ref: 97))-				(attributes-					(FM3.Property (id: 98)-						(name 'fileName')-						(class (ref: 96))-						(type (ref: String)))-					(FM3.Property (id: 99)-						(name 'startLine')-						(class (ref: 96))-						(type (ref: Number)))-					(FM3.Property (id: 100)-						(name 'endLine')-						(class (ref: 96))-						(type (ref: Number)))))-			(FM3.Class (id: 101)-				(name 'SourceTextAnchor')-				(package (ref: 10))-				(superclass (ref: 97)))-			(FM3.Class (id: 97)-				(name 'SourceAnchor')-				(package (ref: 10))-				(superclass (ref: 8))+			(FM3.Class (id: 139)
+				(name 'Attribute')
+				(package (ref: 41))
+				(superclass (ref: 43))
 				(attributes-					(FM3.Property (id: 102)-						(name 'element')-						(class (ref: 97))-						(opposite (ref: 103))-						(type (ref: 41)))))-			(FM3.Class (id: 57)+					(FM3.Property (id: 140)
+						(name 'hasClassScope')
+						(class (ref: 139))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 141)
+						(name 'parentType')
+						(class (ref: 139))
+						(opposite (ref: 142))
+						(type (ref: 45)))))
+			(FM3.Class (id: 143)
+				(name 'UnknownVariable')
+				(package (ref: 41))
+				(superclass (ref: 43)))
+			(FM3.Class (id: 144)
+				(name 'CSourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 112)))
+			(FM3.Class (id: 129)
 				(name 'AnnotationTypeAttribute')-				(package (ref: 10))-				(superclass (ref: 50))+				(package (ref: 41))
+				(superclass (ref: 60))
 				(attributes-					(FM3.Property (id: 104)+					(FM3.Property (id: 145)
 						(name 'declaredType')-						(class (ref: 57))-						(type (ref: 19)))-					(FM3.Property (id: 56)-						(name 'parentAnnotationType')-						(class (ref: 57))-						(opposite (ref: 55))-						(type (ref: 49)))-					(FM3.Property (id: 105)+						(class (ref: 129))
+						(type (ref: 45)))
+					(FM3.Property (id: 128)
 						(name 'annotationAttributeInstances')-						(class (ref: 57))+						(class (ref: 129))
 						(derived true) 						(multivalued true)-						(type (ref: 85)))))-			(FM3.Class (id: 22)-				(name 'Invocation')-				(package (ref: 10))-				(superclass (ref: 69))+						(opposite (ref: 127))
+						(type (ref: 106)))
+					(FM3.Property (id: 146)
+						(name 'parentAnnotationType')
+						(class (ref: 129))
+						(opposite (ref: 147))
+						(type (ref: 101)))))
+			(FM3.Class (id: 45)
+				(name 'Type')
+				(package (ref: 41))
+				(superclass (ref: 71))
 				(attributes-					(FM3.Property (id: 21)-						(name 'sender')-						(class (ref: 22))-						(opposite (ref: 20))-						(type (ref: 16)))-					(FM3.Property (id: 106)-						(name 'signature')-						(class (ref: 22))-						(type (ref: String)))-					(FM3.Property (id: 107)-						(name 'receiver')-						(class (ref: 22))-						(opposite (ref: 108))-						(type (ref: 50)))-					(FM3.Property (id: 31)-						(name 'candidates')-						(class (ref: 22))+					(FM3.Property (id: 148)
+						(name 'superInheritances')
+						(class (ref: 45))
+						(derived true)
 						(multivalued true)-						(opposite (ref: 30))-						(type (ref: 16)))-					(FM3.Property (id: 109)-						(name 'receiverSourceCode')-						(class (ref: 22))-						(type (ref: String)))))-			(FM3.Class (id: 110)-				(name 'MethodGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 111)+						(opposite (ref: 149))
+						(type (ref: 150)))
+					(FM3.Property (id: 151)
+						(name 'subInheritances')
+						(class (ref: 45))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 152))
+						(type (ref: 150)))
+					(FM3.Property (id: 153)
+						(name 'container')
+						(class (ref: 45))
+						(opposite (ref: 154))
+						(type (ref: 71)))
+					(FM3.Property (id: 155)
+						(name 'methods')
+						(class (ref: 45))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 156))
+						(type (ref: 93)))
+					(FM3.Property (id: 142)
+						(name 'attributes')
+						(class (ref: 45))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 141))
+						(type (ref: 139)))))
+			(FM3.Class (id: 157)
+				(name 'Parameter')
+				(package (ref: 41))
+				(superclass (ref: 43))
+				(attributes
+					(FM3.Property (id: 158)
+						(name 'parentBehaviouralEntity')
+						(class (ref: 157))
+						(opposite (ref: 159))
+						(type (ref: 58)))))
+			(FM3.Class (id: 6)
+				(name 'Entity')
+				(package (ref: 41))
+				(superclass (ref: Object))
+				(attributes
+					(FM3.Property (id: 103)
+						(name 'annotationInstances')
+						(class (ref: 6))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 102))
+						(type (ref: 98)))))
+			(FM3.Class (id: 160)
+				(name 'EnumValue')
+				(package (ref: 41))
+				(superclass (ref: 60))
+				(attributes
+					(FM3.Property (id: 161)
+						(name 'parentEnum')
+						(class (ref: 160))
+						(opposite (ref: 162))
+						(type (ref: 163)))))
+			(FM3.Class (id: 164)
+				(name 'NamespaceGroup')
+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 165)
 				(name 'Function')-				(package (ref: 10))-				(superclass (ref: 16))+				(package (ref: 41))
+				(superclass (ref: 58))
 				(attributes-					(FM3.Property (id: 112)+					(FM3.Property (id: 166)
 						(name 'parentModule')-						(class (ref: 111))-						(type (ref: 91)))-					(FM3.Property (id: 113)+						(class (ref: 165))
+						(opposite (ref: 167))
+						(type (ref: 88)))
+					(FM3.Property (id: 168)
 						(name 'parentScope')-						(class (ref: 111))-						(opposite (ref: 114))-						(type (ref: 89)))))-			(FM3.Class (id: 115)-				(name 'JavaSourceLanguage')-				(package (ref: 10))-				(superclass (ref: 83)))-			(FM3.Class (id: 116)-				(name 'CustomSourceLanguage')-				(package (ref: 10))-				(superclass (ref: 83))-				(attributes-					(FM3.Property (id: 117)-						(name 'name')-						(class (ref: 116))-						(type (ref: String)))))-			(FM3.Class (id: 78)+						(class (ref: 165))
+						(type (ref: 85)))))
+			(FM3.Class (id: 169)
 				(name 'LeafEntity')-				(package (ref: 10))-				(superclass (ref: 50)))-			(FM3.Class (id: 91)+				(package (ref: 41))
+				(superclass (ref: 60)))
+			(FM3.Class (id: 170)
+				(name 'CaughtException')
+				(package (ref: 41))
+				(superclass (ref: 90))
+				(attributes
+					(FM3.Property (id: 171)
+						(name 'definingMethod')
+						(class (ref: 170))
+						(opposite (ref: 172))
+						(type (ref: 93)))))
+			(FM3.Class (id: 88)
 				(name 'Module')-				(package (ref: 10))-				(superclass (ref: 89)))-			(FM3.Class (id: 118)-				(name 'Namespace')-				(package (ref: 10))-				(superclass (ref: 89)))-			(FM3.Class (id: 119)-				(name 'PackageGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 50)-				(name 'NamedEntity')-				(package (ref: 10))-				(superclass (ref: 41))+				(package (ref: 41))
+				(superclass (ref: 85)))
+			(FM3.Class (id: 101)
+				(name 'AnnotationType')
+				(package (ref: 41))
+				(superclass (ref: 60))
 				(attributes-					(FM3.Property (id: 120)-						(name 'isFinal')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 108)-						(name 'receivingInvocations')-						(class (ref: 50))+					(FM3.Property (id: 147)
+						(name 'attributes')
+						(class (ref: 101))
 						(derived true) 						(multivalued true)-						(opposite (ref: 107))-						(type (ref: 22)))-					(FM3.Property (id: 121)-						(name 'name')-						(class (ref: 50))-						(type (ref: String)))-					(FM3.Property (id: 122)-						(name 'isPublic')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 123)-						(name 'isProtected')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 124)-						(name 'parentPackage')-						(class (ref: 50))-						(opposite (ref: 125))-						(type (ref: 126)))-					(FM3.Property (id: 127)-						(name 'isStub')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 128)-						(name 'isPrivate')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 129)-						(name 'modifiers')-						(class (ref: 50))-						(multivalued true)-						(type (ref: String)))-					(FM3.Property (id: 130)-						(name 'isPackage')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 131)-						(name 'isAbstract')-						(class (ref: 50))-						(type (ref: Boolean)))-					(FM3.Property (id: 132)-						(name 'belongsTo')-						(class (ref: 50))+						(opposite (ref: 146))
+						(type (ref: 129)))
+					(FM3.Property (id: 173)
+						(name 'container')
+						(class (ref: 101))
+						(opposite (ref: 174))
+						(type (ref: 71)))
+					(FM3.Property (id: 100)
+						(name 'instances')
+						(class (ref: 101))
 						(derived true)-						(type (ref: 17)))))-			(FM3.Class (id: 126)+						(multivalued true)
+						(opposite (ref: 99))
+						(type (ref: 98)))))
+			(FM3.Class (id: 175)
+				(name 'PackageGroup')
+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 176)
+				(name 'Namespace')
+				(package (ref: 41))
+				(superclass (ref: 85)))
+			(FM3.Class (id: 177)
+				(name 'DeclaredException')
+				(package (ref: 41))
+				(superclass (ref: 90))
+				(attributes
+					(FM3.Property (id: 178)
+						(name 'definingMethod')
+						(class (ref: 177))
+						(opposite (ref: 179))
+						(type (ref: 93)))))
+			(FM3.Class (id: 67)
 				(name 'Package')-				(package (ref: 10))-				(superclass (ref: 89))+				(package (ref: 41))
+				(superclass (ref: 85))
 				(attributes-					(FM3.Property (id: 125)+					(FM3.Property (id: 66)
 						(name 'childNamedEntities')-						(class (ref: 126))+						(class (ref: 67))
 						(derived true) 						(multivalued true)-						(opposite (ref: 124))-						(type (ref: 50)))))-			(FM3.Class (id: 133)-				(name 'ImplicitVariable')-				(package (ref: 10))-				(superclass (ref: 13))+						(opposite (ref: 65))
+						(type (ref: 60)))))
+			(FM3.Class (id: 150)
+				(name 'Inheritance')
+				(package (ref: 41))
+				(superclass (ref: 52))
 				(attributes-					(FM3.Property (id: 134)-						(name 'container')-						(class (ref: 133))-						(type (ref: 19)))))-			(FM3.Class (id: 66)-				(name 'Method')-				(package (ref: 10))-				(superclass (ref: 16))+					(FM3.Property (id: 152)
+						(name 'superclass')
+						(class (ref: 150))
+						(opposite (ref: 151))
+						(type (ref: 45)))
+					(FM3.Property (id: 149)
+						(name 'subclass')
+						(class (ref: 150))
+						(opposite (ref: 148))
+						(type (ref: 45)))))
+			(FM3.Class (id: 85)
+				(name 'ScopingEntity')
+				(package (ref: 41))
+				(superclass (ref: 71))
 				(attributes-					(FM3.Property (id: 135)-						(name 'thrownExceptions')-						(class (ref: 66))-						(derived true)-						(multivalued true)-						(opposite (ref: 136))-						(type (ref: 137)))-					(FM3.Property (id: 138)-						(name 'kind')-						(class (ref: 66))-						(type (ref: String)))-					(FM3.Property (id: 139)-						(name 'hasClassScope')-						(class (ref: 66))-						(type (ref: Boolean)))-					(FM3.Property (id: 65)-						(name 'declaredExceptions')-						(class (ref: 66))+					(FM3.Property (id: 87)
+						(name 'globalVariables')
+						(class (ref: 85))
 						(derived true) 						(multivalued true)-						(opposite (ref: 64))-						(type (ref: 62)))-					(FM3.Property (id: 140)-						(name 'caughtExceptions')-						(class (ref: 66))+						(opposite (ref: 86))
+						(type (ref: 83)))
+					(FM3.Property (id: 167)
+						(name 'functions')
+						(class (ref: 85))
 						(derived true) 						(multivalued true)-						(opposite (ref: 141))-						(type (ref: 142)))-					(FM3.Property (id: 143)-						(name 'parentType')-						(class (ref: 66))-						(opposite (ref: 144))-						(type (ref: 19)))))-			(FM3.Class (id: 83)-				(name 'SourceLanguage')-				(package (ref: 10))-				(superclass (ref: 8))-				(attributes-					(FM3.Property (id: 145)-						(name 'sourcedEntities')-						(class (ref: 83))+						(opposite (ref: 166))
+						(type (ref: 165)))
+					(FM3.Property (id: 180)
+						(name 'childScopes')
+						(class (ref: 85))
 						(derived true) 						(multivalued true)-						(opposite (ref: 146))-						(type (ref: 41)))-					(FM3.Property (id: 147)-						(name 'name')-						(class (ref: 83))-						(derived true)-						(type (ref: String)))))-			(FM3.Class (id: 29)-				(name 'Access')-				(package (ref: 10))-				(superclass (ref: 69))-				(attributes-					(FM3.Property (id: 28)-						(name 'accessor')-						(class (ref: 29))-						(opposite (ref: 27))-						(type (ref: 16)))-					(FM3.Property (id: 148)-						(name 'isWrite')-						(class (ref: 29))-						(type (ref: Boolean)))-					(FM3.Property (id: 81)-						(name 'variable')-						(class (ref: 29))-						(opposite (ref: 80))-						(type (ref: 13)))-					(FM3.Property (id: 149)-						(name 'isRead')-						(class (ref: 29))-						(derived true)-						(type (ref: Boolean)))))-			(FM3.Class (id: 150)+						(opposite (ref: 181))
+						(type (ref: 85)))
+					(FM3.Property (id: 181)
+						(name 'parentScope')
+						(class (ref: 85))
+						(opposite (ref: 180))
+						(type (ref: 85)))))
+			(FM3.Class (id: 182)
 				(name 'AnnotationTypeGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 89)-				(name 'ScopingEntity')-				(package (ref: 10))-				(superclass (ref: 17))+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 93)
+				(name 'Method')
+				(package (ref: 41))
+				(superclass (ref: 58))
 				(attributes-					(FM3.Property (id: 114)-						(name 'functions')-						(class (ref: 89))+					(FM3.Property (id: 179)
+						(name 'declaredExceptions')
+						(class (ref: 93))
 						(derived true) 						(multivalued true)-						(opposite (ref: 113))-						(type (ref: 111)))-					(FM3.Property (id: 151)-						(name 'parentScope')-						(class (ref: 89))-						(opposite (ref: 152))-						(type (ref: 89)))-					(FM3.Property (id: 88)-						(name 'globalVariables')-						(class (ref: 89))+						(opposite (ref: 178))
+						(type (ref: 177)))
+					(FM3.Property (id: 183)
+						(name 'hasClassScope')
+						(class (ref: 93))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 184)
+						(name 'kind')
+						(class (ref: 93))
+						(type (ref: String)))
+					(FM3.Property (id: 172)
+						(name 'caughtExceptions')
+						(class (ref: 93))
 						(derived true) 						(multivalued true)-						(opposite (ref: 87))-						(type (ref: 86)))-					(FM3.Property (id: 152)-						(name 'childScopes')-						(class (ref: 89))+						(opposite (ref: 171))
+						(type (ref: 170)))
+					(FM3.Property (id: 92)
+						(name 'thrownExceptions')
+						(class (ref: 93))
 						(derived true) 						(multivalued true)-						(opposite (ref: 151))-						(type (ref: 89)))))-			(FM3.Class (id: 142)-				(name 'CaughtException')-				(package (ref: 10))-				(superclass (ref: 63))-				(attributes-					(FM3.Property (id: 141)-						(name 'definingMethod')-						(class (ref: 142))-						(opposite (ref: 140))-						(type (ref: 66)))))-			(FM3.Class (id: 41)-				(name 'SourcedEntity')-				(package (ref: 10))-				(superclass (ref: 8))+						(opposite (ref: 91))
+						(type (ref: 89)))
+					(FM3.Property (id: 156)
+						(name 'parentType')
+						(class (ref: 93))
+						(opposite (ref: 155))
+						(type (ref: 45)))))
+			(FM3.Class (id: 185)
+				(name 'MethodGroup')
+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 112)
+				(name 'SourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 44)-						(name 'comments')-						(class (ref: 41))+					(FM3.Property (id: 186)
+						(name 'name')
+						(class (ref: 112))
+						(derived true)
+						(type (ref: String)))
+					(FM3.Property (id: 111)
+						(name 'sourcedEntities')
+						(class (ref: 112))
 						(derived true) 						(multivalued true)-						(opposite (ref: 43))-						(type (ref: 40)))-					(FM3.Property (id: 103)-						(name 'sourceAnchor')-						(class (ref: 41))-						(opposite (ref: 102))-						(type (ref: 97)))-					(FM3.Property (id: 146)-						(name 'declaredSourceLanguage')-						(class (ref: 41))-						(opposite (ref: 145))-						(type (ref: 83)))))-			(FM3.Class (id: 137)-				(name 'ThrownException')-				(package (ref: 10))-				(superclass (ref: 63))+						(opposite (ref: 110))
+						(type (ref: 61)))))
+			(FM3.Class (id: 97)
+				(name 'ParameterType')
+				(package (ref: 41))
+				(superclass (ref: 45)))
+			(FM3.Class (id: 187)
+				(name 'ParameterizedType')
+				(package (ref: 41))
+				(superclass (ref: 45))
 				(attributes-					(FM3.Property (id: 136)-						(name 'definingMethod')-						(class (ref: 137))-						(opposite (ref: 135))-						(type (ref: 66)))))-			(FM3.Class (id: 17)+					(FM3.Property (id: 188)
+						(name 'arguments')
+						(class (ref: 187))
+						(multivalued true)
+						(type (ref: 45)))
+					(FM3.Property (id: 189)
+						(name 'parameterizableClass')
+						(class (ref: 187))
+						(type (ref: 94)))))
+			(FM3.Class (id: 71)
 				(name 'ContainerEntity')-				(package (ref: 10))-				(superclass (ref: 50))+				(package (ref: 41))
+				(superclass (ref: 60))
 				(attributes-					(FM3.Property (id: 153)+					(FM3.Property (id: 154)
 						(name 'types')-						(class (ref: 17))+						(class (ref: 71))
 						(derived true) 						(multivalued true)-						(opposite (ref: 154))-						(type (ref: 19)))-					(FM3.Property (id: 155)-						(name 'incomingReferences')-						(class (ref: 17))+						(opposite (ref: 153))
+						(type (ref: 45)))
+					(FM3.Property (id: 136)
+						(name 'outgoingReferences')
+						(class (ref: 71))
 						(derived true) 						(multivalued true)-						(opposite (ref: 156))-						(type (ref: 157)))-					(FM3.Property (id: 158)-						(name 'outgoingReferences')-						(class (ref: 17))+						(opposite (ref: 135))
+						(type (ref: 132)))
+					(FM3.Property (id: 134)
+						(name 'incomingReferences')
+						(class (ref: 71))
 						(derived true) 						(multivalued true)-						(opposite (ref: 159))-						(type (ref: 157)))-					(FM3.Property (id: 52)+						(opposite (ref: 133))
+						(type (ref: 132)))
+					(FM3.Property (id: 174)
 						(name 'definedAnnotationTypes')-						(class (ref: 17))+						(class (ref: 71))
 						(derived true) 						(multivalued true)-						(opposite (ref: 51))-						(type (ref: 49)))))-			(FM3.Class (id: 95)+						(opposite (ref: 173))
+						(type (ref: 101)))))
+			(FM3.Class (id: 163)
 				(name 'Enum')-				(package (ref: 10))-				(superclass (ref: 19)))-			(FM3.Class (id: 160)-				(name 'GlobalVariableGroup')-				(package (ref: 10))-				(superclass (ref: 3)))-			(FM3.Class (id: 85)-				(name 'AnnotationInstanceAttribute')-				(package (ref: 10))-				(superclass (ref: 8)))-			(FM3.Class (id: 19)-				(name 'Type')-				(package (ref: 10))-				(superclass (ref: 17))+				(package (ref: 41))
+				(superclass (ref: 45))
 				(attributes-					(FM3.Property (id: 61)-						(name 'attributes')-						(class (ref: 19))+					(FM3.Property (id: 162)
+						(name 'values')
+						(class (ref: 163))
 						(derived true) 						(multivalued true)-						(opposite (ref: 60))-						(type (ref: 58)))-					(FM3.Property (id: 144)-						(name 'methods')-						(class (ref: 19))+						(opposite (ref: 161))
+						(type (ref: 160)))))
+			(FM3.Class (id: 190)
+				(name 'JavaSourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 112)))
+			(FM3.Class (id: 191)
+				(name 'CustomSourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 112))
+				(attributes
+					(FM3.Property (id: 192)
+						(name 'name')
+						(class (ref: 191))
+						(type (ref: String)))))
+			(FM3.Class (id: 43)
+				(name 'StructuralEntity')
+				(package (ref: 41))
+				(superclass (ref: 169))
+				(attributes
+					(FM3.Property (id: 193)
+						(name 'declaredType')
+						(class (ref: 43))
+						(type (ref: 45)))
+					(FM3.Property (id: 55)
+						(name 'incomingAccesses')
+						(class (ref: 43))
 						(derived true) 						(multivalued true)-						(opposite (ref: 143))-						(type (ref: 66)))-					(FM3.Property (id: 154)-						(name 'container')-						(class (ref: 19))-						(opposite (ref: 153))-						(type (ref: 17)))-					(FM3.Property (id: 73)-						(name 'superInheritances')-						(class (ref: 19))+						(opposite (ref: 54))
+						(type (ref: 51)))))
+			(FM3.Class (id: 58)
+				(name 'BehaviouralEntity')
+				(package (ref: 41))
+				(superclass (ref: 71))
+				(attributes
+					(FM3.Property (id: 57)
+						(name 'accesses')
+						(class (ref: 58))
 						(derived true) 						(multivalued true)-						(opposite (ref: 72))-						(type (ref: 68)))-					(FM3.Property (id: 71)-						(name 'subInheritances')-						(class (ref: 19))+						(opposite (ref: 56))
+						(type (ref: 51)))
+					(FM3.Property (id: 194)
+						(name 'declaredType')
+						(class (ref: 58))
+						(type (ref: 45)))
+					(FM3.Property (id: 124)
+						(name 'incomingInvocations')
+						(class (ref: 58))
 						(derived true) 						(multivalued true)-						(opposite (ref: 70))-						(type (ref: 68)))))-			(FM3.Class (id: 33)+						(opposite (ref: 123))
+						(type (ref: 77)))
+					(FM3.Property (id: 121)
+						(name 'outgoingInvocations')
+						(class (ref: 58))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 120))
+						(type (ref: 77)))
+					(FM3.Property (id: 159)
+						(name 'parameters')
+						(class (ref: 58))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 158))
+						(type (ref: 157)))
+					(FM3.Property (id: 109)
+						(name 'localVariables')
+						(class (ref: 58))
+						(derived true)
+						(multivalued true)
+						(opposite (ref: 108))
+						(type (ref: 107)))
+					(FM3.Property (id: 195)
+						(name 'signature')
+						(class (ref: 58))
+						(type (ref: String)))))
+			(FM3.Class (id: 196)
+				(name 'GlobalVariableGroup')
+				(package (ref: 41))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 47)
+				(name 'SourceAnchor')
+				(package (ref: 41))
+				(superclass (ref: 6))
+				(attributes
+					(FM3.Property (id: 114)
+						(name 'element')
+						(class (ref: 47))
+						(opposite (ref: 113))
+						(type (ref: 61)))))
+			(FM3.Class (id: 197)
+				(name 'UnknownSourceLanguage')
+				(package (ref: 41))
+				(superclass (ref: 112)))
+			(FM3.Class (id: 95)
 				(name 'Class')-				(package (ref: 10))-				(superclass (ref: 19))+				(package (ref: 41))
+				(superclass (ref: 45))
 				(attributes-					(FM3.Property (id: 161)+					(FM3.Property (id: 198)
+						(name 'isInterface')
+						(class (ref: 95))
+						(type (ref: Boolean)))
+					(FM3.Property (id: 199)
 						(name 'isAbstract')-						(class (ref: 33))+						(class (ref: 95))
 						(derived true)-						(type (ref: Boolean)))-					(FM3.Property (id: 162)-						(name 'isInterface')-						(class (ref: 33)) 						(type (ref: Boolean)))))-			(FM3.Class (id: 26)-				(name 'LocalVariable')-				(package (ref: 10))-				(superclass (ref: 13))-				(attributes-					(FM3.Property (id: 25)-						(name 'parentBehaviouralEntity')-						(class (ref: 26))-						(opposite (ref: 24))-						(type (ref: 16)))))-			(FM3.Class (id: 163)-				(name 'UnknownSourceLanguage')-				(package (ref: 10))-				(superclass (ref: 83)))-			(FM3.Class (id: 164)+			(FM3.Class (id: 200)
 				(name 'SmalltalkMonticelloSourceLanguage')-				(package (ref: 10))-				(superclass (ref: 83)))-			(FM3.Class (id: 157)-				(name 'Reference')-				(package (ref: 10))-				(superclass (ref: 69))-				(attributes-					(FM3.Property (id: 156)-						(name 'target')-						(class (ref: 157))-						(opposite (ref: 155))-						(type (ref: 17)))-					(FM3.Property (id: 159)-						(name 'source')-						(class (ref: 157))-						(opposite (ref: 158))-						(type (ref: 17)))))))-	(FM3.Package (id: 165)+				(package (ref: 41))
+				(superclass (ref: 112)))))
+	(FM3.Package (id: 201)
 		(name 'Dude') 		(classes-			(FM3.Class (id: 166)-				(name 'MultiplicationGroup')-				(package (ref: 165))-				(superclass (ref: 3)))-			(FM3.Class (id: 167)+			(FM3.Class (id: 202)
 				(name 'DuplicationGroup')-				(package (ref: 165))-				(superclass (ref: 3)))-			(FM3.Class (id: 168)-				(name 'CodeLine')-				(package (ref: 165))-				(superclass (ref: 8)))-			(FM3.Class (id: 169)-				(name 'CodeFragment')-				(package (ref: 165))-				(superclass (ref: 8)))-			(FM3.Class (id: 170)+				(package (ref: 201))
+				(superclass (ref: 18)))
+			(FM3.Class (id: 203)
 				(name 'Duplication')-				(package (ref: 165))-				(superclass (ref: 8))+				(package (ref: 201))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 171)+					(FM3.Property (id: 204)
 						(name 'multiplicationInvolved')-						(class (ref: 170))-						(opposite (ref: 172))-						(type (ref: 173)))))-			(FM3.Class (id: 173)+						(class (ref: 203))
+						(opposite (ref: 205))
+						(type (ref: 206)))))
+			(FM3.Class (id: 207)
+				(name 'CodeLine')
+				(package (ref: 201))
+				(superclass (ref: 6)))
+			(FM3.Class (id: 208)
+				(name 'CodeFragment')
+				(package (ref: 201))
+				(superclass (ref: 6)))
+			(FM3.Class (id: 206)
 				(name 'Multiplication')-				(package (ref: 165))-				(superclass (ref: 8))+				(package (ref: 201))
+				(superclass (ref: 6))
 				(attributes-					(FM3.Property (id: 172)+					(FM3.Property (id: 205)
 						(name 'duplications')-						(class (ref: 173))+						(class (ref: 206))
 						(derived true) 						(multivalued true)-						(opposite (ref: 171))-						(type (ref: 170)))))))-	(FM3.Package (id: 174)-		(name 'Hismo')-		(classes-			(FM3.Class (id: 175)-				(name 'HismoClassVersion')-				(package (ref: 174))-				(superclass (ref: 176)))-			(FM3.Class (id: 177)-				(name 'HismoMethodHistoryGroup')-				(package (ref: 174))-				(superclass (ref: 178)))-			(FM3.Class (id: 179)-				(name 'HismoPackageHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 181)-				(name 'HismoClassHierarchy')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 182)-				(name 'HismoCoChangeVersion')-				(package (ref: 174))-				(superclass (ref: 183)))-			(FM3.Class (id: 176)-				(name 'HismoEntityVersion')-				(package (ref: 174))-				(superclass (ref: 183)))-			(FM3.Class (id: 184)-				(name 'HismoClassHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 185)-				(name 'HismoNamespaceHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 178)-				(name 'HismoHistoryGroup')-				(package (ref: 174))-				(superclass (ref: 3)))-			(FM3.Class (id: 186)-				(name 'HismoAccessHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 187)-				(name 'HismoCoChangePattern')-				(package (ref: 174))-				(superclass (ref: 3)))-			(FM3.Class (id: 188)-				(name 'HismoInheritanceDefinitionHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 189)-				(name 'HismoModelHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 190)-				(name 'HismoNamespaceVersion')-				(package (ref: 174))-				(superclass (ref: 176)))-			(FM3.Class (id: 180)-				(name 'HismoAbstractHistory')-				(package (ref: 174))-				(superclass (ref: 8)))-			(FM3.Class (id: 191)-				(name 'HismoInvocationHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 192)-				(name 'HismoNamespaceHistoryGroup')-				(package (ref: 174))-				(superclass (ref: 178)))-			(FM3.Class (id: 193)-				(name 'HismoClassHistoryGroup')-				(package (ref: 174))-				(superclass (ref: 178)))-			(FM3.Class (id: 194)-				(name 'HismoMethodHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 195)-				(name 'HismoAttributeHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 196)-				(name 'HismoCoChangeHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 197)-				(name 'HismoMethodVersion')-				(package (ref: 174))-				(superclass (ref: 176)))-			(FM3.Class (id: 198)-				(name 'HismoFileHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 199)-				(name 'HismoFolderHistory')-				(package (ref: 174))-				(superclass (ref: 180)))-			(FM3.Class (id: 183)-				(name 'HismoAbstractVersion')-				(package (ref: 174))-				(superclass (ref: 8)))))-	(FM3.Package (id: 200)-		(name 'Moose')-		(classes-			(FM3.Class (id: 201)-				(name 'Entity')-				(abstract true)-				(package (ref: 200))-				(superclass (ref: Object)))-			(FM3.Class (id: 3)-				(name 'Group')-				(package (ref: 200))-				(superclass (ref: 202)))-			(FM3.Class (id: 203)-				(name 'Model')-				(package (ref: 200))-				(superclass (ref: 202))-				(attributes-					(FM3.Property (id: 204)-						(name 'sourceLanguage')-						(class (ref: 203))-						(type (ref: String)))))-			(FM3.Class (id: 202)-				(name 'AbsractGroup')-				(abstract true)-				(package (ref: 200))-				(superclass (ref: 201))))))+						(opposite (ref: 204))
+						(type (ref: 203)))))
+			(FM3.Class (id: 209)
+				(name 'MultiplicationGroup')
+				(package (ref: 201))
+				(superclass (ref: 18))))))
Index: verveine.core/src/fr/inria/verveine/core/gen/file/FILEModel.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/file/FILEModel.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/file/FILEModel.java	(revision 85)
@@ -13,10 +13,10 @@
     
     public static void importInto(MetaRepository metamodel) {
 		metamodel.with(fr.inria.verveine.core.gen.file.FileGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.file.Folder.class);
 		metamodel.with(fr.inria.verveine.core.gen.file.AbstractFile.class);
-		metamodel.with(fr.inria.verveine.core.gen.file.File.class);
 		metamodel.with(fr.inria.verveine.core.gen.file.FolderGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.file.File.class);
+		metamodel.with(fr.inria.verveine.core.gen.file.Folder.class);
 
     }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/hismo/HismoModel.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/hismo/HismoModel.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/hismo/HismoModel.java	(revision 85)
@@ -12,31 +12,31 @@
     }
     
     public static void importInto(MetaRepository metamodel) {
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHierarchy.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAccessHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodHistoryGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassVersion.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHistoryGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoCoChangeVersion.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoFolderHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoFileHistory.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoCoChangePattern.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoInvocationHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceVersion.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoModelHistory.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoHistoryGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoFolderHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoEntityVersion.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodVersion.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoCoChangeVersion.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassVersion.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoPackageHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAbstractHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAbstractVersion.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceHistoryGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodHistoryGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoInheritanceDefinitionHistory.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAttributeHistory.class);
 		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoCoChangeHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoInheritanceDefinitionHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceVersion.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceHistoryGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoFileHistory.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAbstractVersion.class);
-		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHistoryGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAbstractHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoEntityVersion.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoClassHierarchy.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoMethodVersion.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoNamespaceHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoInvocationHistory.class);
+		metamodel.with(fr.inria.verveine.core.gen.hismo.HismoAccessHistory.class);
 
     }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/dude/DudeModel.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/dude/DudeModel.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/dude/DudeModel.java	(revision 85)
@@ -12,11 +12,11 @@
     }
     
     public static void importInto(MetaRepository metamodel) {
-		metamodel.with(fr.inria.verveine.core.gen.dude.CodeFragment.class);
 		metamodel.with(fr.inria.verveine.core.gen.dude.Multiplication.class);
-		metamodel.with(fr.inria.verveine.core.gen.dude.DuplicationGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.dude.MultiplicationGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.dude.CodeFragment.class);
 		metamodel.with(fr.inria.verveine.core.gen.dude.Duplication.class);
+		metamodel.with(fr.inria.verveine.core.gen.dude.DuplicationGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.dude.CodeLine.class);
 
     }
Index: verveine.core/src/fr/inria/verveine/core/gen/moose/MooseModel.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/moose/MooseModel.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/moose/MooseModel.java	(revision 85)
@@ -12,10 +12,10 @@
     }
     
     public static void importInto(MetaRepository metamodel) {
-		metamodel.with(fr.inria.verveine.core.gen.moose.AbsractGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.moose.Group.class);
 		metamodel.with(fr.inria.verveine.core.gen.moose.Model.class);
 		metamodel.with(fr.inria.verveine.core.gen.moose.Entity.class);
-		metamodel.with(fr.inria.verveine.core.gen.moose.Group.class);
+		metamodel.with(fr.inria.verveine.core.gen.moose.AbsractGroup.class);
 
     }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationTypeAttribute.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationTypeAttribute.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationTypeAttribute.java	(revision 85)
@@ -1,6 +1,7 @@
 // Automagically generated code, please do not change
 package fr.inria.verveine.core.gen.famix;
 
+import ch.akuhn.fame.internal.MultivalueSet;
 import java.util.*;
 import ch.akuhn.fame.FameProperty;
 import ch.akuhn.fame.FameDescription;
@@ -41,13 +42,61 @@
         parentAnnotationType.getAttributes().add(this);
     }
     
-    @FameProperty(name = "annotationAttributeInstances", derived = true)
+    private Collection<AnnotationInstanceAttribute> annotationAttributeInstances; 
+
+    @FameProperty(name = "annotationAttributeInstances", opposite = "annotationTypeAttribute", derived = true)
     public Collection<AnnotationInstanceAttribute> getAnnotationAttributeInstances() {
-        // TODO: this is a derived property, implement this method manually.
-        throw new UnsupportedOperationException("Not yet implemented!");  
+        if (annotationAttributeInstances == null) {
+            annotationAttributeInstances = new MultivalueSet<AnnotationInstanceAttribute>() {
+                @Override
+                protected void clearOpposite(AnnotationInstanceAttribute e) {
+                    e.setAnnotationTypeAttribute(null);
+                }
+                @Override
+                protected void setOpposite(AnnotationInstanceAttribute e) {
+                    e.setAnnotationTypeAttribute(AnnotationTypeAttribute.this);
+                }
+            };
+        }
+        return annotationAttributeInstances;
     }
+    
+    public void setAnnotationAttributeInstances(Collection<? extends AnnotationInstanceAttribute> annotationAttributeInstances) {
+        this.getAnnotationAttributeInstances().clear();
+        this.getAnnotationAttributeInstances().addAll(annotationAttributeInstances);
+    }                    
+    
         
+    public void addAnnotationAttributeInstances(AnnotationInstanceAttribute one) {
+        this.getAnnotationAttributeInstances().add(one);
+    }   
+    
+    public void addAnnotationAttributeInstances(AnnotationInstanceAttribute one, AnnotationInstanceAttribute... many) {
+        this.getAnnotationAttributeInstances().add(one);
+        for (AnnotationInstanceAttribute each : many)
+            this.getAnnotationAttributeInstances().add(each);
+    }   
+    
+    public void addAnnotationAttributeInstances(Iterable<? extends AnnotationInstanceAttribute> many) {
+        for (AnnotationInstanceAttribute each : many)
+            this.getAnnotationAttributeInstances().add(each);
+    }   
+                
+    public void addAnnotationAttributeInstances(AnnotationInstanceAttribute[] many) {
+        for (AnnotationInstanceAttribute each : many)
+            this.getAnnotationAttributeInstances().add(each);
+    }
+    
+    public int numberOfAnnotationAttributeInstances() {
+        return getAnnotationAttributeInstances().size();
+    }
 
+    public boolean hasAnnotationAttributeInstances() {
+        return !getAnnotationAttributeInstances().isEmpty();
+    }
+    
+                
+
 
 }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/EnumValue.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/EnumValue.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/EnumValue.java	(revision 85)
@@ -14,13 +14,19 @@
 
     private Enum parentEnum;
     
-    @FameProperty(name = "parentEnum")
+    @FameProperty(name = "parentEnum", opposite = "values")
     public Enum getParentEnum() {
         return parentEnum;
     }
 
     public void setParentEnum(Enum parentEnum) {
+        if (this.parentEnum != null) {
+            if (this.parentEnum.equals(parentEnum)) return;
+            this.parentEnum.getValues().remove(this);
+        }
         this.parentEnum = parentEnum;
+        if (parentEnum == null) return;
+        parentEnum.getValues().add(this);
     }
     
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/SourcedEntity.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/SourcedEntity.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/SourcedEntity.java	(revision 85)
@@ -14,23 +14,6 @@
 
 
 
-    private SourceLanguage declaredSourceLanguage = null;
-    
-    @FameProperty(name = "declaredSourceLanguage", opposite = "sourcedEntities")
-    public SourceLanguage getDeclaredSourceLanguage() {
-        return declaredSourceLanguage;
-    }
-
-    public void setDeclaredSourceLanguage(SourceLanguage declaredSourceLanguage) {
-        if (this.declaredSourceLanguage != null) {
-            if (this.declaredSourceLanguage.equals(declaredSourceLanguage)) return;
-            this.declaredSourceLanguage.getSourcedEntities().remove(this);
-        }
-        this.declaredSourceLanguage = declaredSourceLanguage;
-        if (declaredSourceLanguage == null) return;
-        declaredSourceLanguage.getSourcedEntities().add(this);
-    }
-    
     private SourceAnchor sourceAnchor;
     
     @FameProperty(name = "sourceAnchor", opposite = "element")
@@ -47,6 +30,23 @@
         }
     }
     
+    private SourceLanguage declaredSourceLanguage;
+    
+    @FameProperty(name = "declaredSourceLanguage", opposite = "sourcedEntities")
+    public SourceLanguage getDeclaredSourceLanguage() {
+        return declaredSourceLanguage;
+    }
+
+    public void setDeclaredSourceLanguage(SourceLanguage declaredSourceLanguage) {
+        if (this.declaredSourceLanguage != null) {
+            if (this.declaredSourceLanguage.equals(declaredSourceLanguage)) return;
+            this.declaredSourceLanguage.getSourcedEntities().remove(this);
+        }
+        this.declaredSourceLanguage = declaredSourceLanguage;
+        if (declaredSourceLanguage == null) return;
+        declaredSourceLanguage.getSourcedEntities().add(this);
+    }
+    
     private Collection<Comment> comments; 
 
     @FameProperty(name = "comments", opposite = "container", derived = true)
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/Enum.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/Enum.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/Enum.java	(revision 85)
@@ -1,6 +1,9 @@
 // Automagically generated code, please do not change
 package fr.inria.verveine.core.gen.famix;
 
+import ch.akuhn.fame.internal.MultivalueSet;
+import java.util.*;
+import ch.akuhn.fame.FameProperty;
 import ch.akuhn.fame.FameDescription;
 import ch.akuhn.fame.FamePackage;
 
@@ -11,7 +14,61 @@
 
 
 
+    private Collection<EnumValue> values; 
+
+    @FameProperty(name = "values", opposite = "parentEnum", derived = true)
+    public Collection<EnumValue> getValues() {
+        if (values == null) {
+            values = new MultivalueSet<EnumValue>() {
+                @Override
+                protected void clearOpposite(EnumValue e) {
+                    e.setParentEnum(null);
+                }
+                @Override
+                protected void setOpposite(EnumValue e) {
+                    e.setParentEnum(Enum.this);
+                }
+            };
+        }
+        return values;
+    }
+    
+    public void setValues(Collection<? extends EnumValue> values) {
+        this.getValues().clear();
+        this.getValues().addAll(values);
+    }                    
+    
+        
+    public void addValues(EnumValue one) {
+        this.getValues().add(one);
+    }   
+    
+    public void addValues(EnumValue one, EnumValue... many) {
+        this.getValues().add(one);
+        for (EnumValue each : many)
+            this.getValues().add(each);
+    }   
+    
+    public void addValues(Iterable<? extends EnumValue> many) {
+        for (EnumValue each : many)
+            this.getValues().add(each);
+    }   
+                
+    public void addValues(EnumValue[] many) {
+        for (EnumValue each : many)
+            this.getValues().add(each);
+    }
+    
+    public int numberOfValues() {
+        return getValues().size();
+    }
 
+    public boolean hasValues() {
+        return !getValues().isEmpty();
+    }
+    
+                
+
 
 }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/CSourceLanguage.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/CSourceLanguage.java	(revision 0)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/CSourceLanguage.java	(revision 85)
@@ -0,0 +1,17 @@
+// Automagically generated code, please do not change
+package fr.inria.verveine.core.gen.famix;
+
+import ch.akuhn.fame.FameDescription;
+import ch.akuhn.fame.FamePackage;
+
+
+@FamePackage("FAMIX")
+@FameDescription("CSourceLanguage")
+public class CSourceLanguage extends SourceLanguage {
+
+
+
+
+
+}
+
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/Method.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/Method.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/Method.java	(revision 85)
@@ -219,17 +219,6 @@
     public void setKind(String kind) {
         this.kind = kind;
     }
-   
-    private Collection<Type> declaredArgumentTypes;
-    
-    @FameProperty(name = "declaredArgumentTypes")
-    public Collection<Type> getDeclaredArgumentTypes() {
-        return declaredArgumentTypes;
-    }
-
-    public void setDeclaredArgumentTypes(Collection<Type> declaredArgumentTypes) {
-        this.declaredArgumentTypes = declaredArgumentTypes;
-    }
     
 
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/NamedEntity.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/NamedEntity.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/NamedEntity.java	(revision 85)
@@ -106,17 +106,6 @@
         this.isPublic = isPublic;
     }
     
-    private Boolean isProtected;
-    
-    @FameProperty(name = "isProtected")
-    public Boolean getIsProtected() {
-        return isProtected;
-    }
-
-    public void setIsProtected(Boolean isProtected) {
-        this.isProtected = isProtected;
-    }
-    
     private Collection<Invocation> receivingInvocations; 
 
     @FameProperty(name = "receivingInvocations", opposite = "receiver", derived = true)
@@ -171,6 +160,17 @@
     }
     
                 
+    private Boolean isProtected;
+    
+    @FameProperty(name = "isProtected")
+    public Boolean getIsProtected() {
+        return isProtected;
+    }
+
+    public void setIsProtected(Boolean isProtected) {
+        this.isProtected = isProtected;
+    }
+    
     private Collection<String> modifiers; 
 
     @FameProperty(name = "modifiers")
@@ -211,7 +211,8 @@
     public boolean hasModifiers() {
         return !getModifiers().isEmpty();
     }
-            
+    
+                
     @FameProperty(name = "belongsTo", derived = true)
     public ContainerEntity getBelongsTo() {
         // TODO: this is a derived property, implement this method manually.
@@ -232,6 +233,7 @@
 
 	@Override
 	public String toString() {
+	// mainly for debugging purposes (in Eclipse debugger)
 		return "a " + this.getClass().getCanonicalName() + " named: " + this.getName();
 	}
     
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstanceAttribute.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstanceAttribute.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstanceAttribute.java	(revision 85)
@@ -1,6 +1,7 @@
 // Automagically generated code, please do not change
 package fr.inria.verveine.core.gen.famix;
 
+import ch.akuhn.fame.FameProperty;
 import ch.akuhn.fame.FameDescription;
 import ch.akuhn.fame.FamePackage;
 
@@ -11,7 +12,52 @@
 
 
 
+    private AnnotationInstance parentAnnotationInstance;
+    
+    @FameProperty(name = "parentAnnotationInstance", opposite = "attributes")
+    public AnnotationInstance getParentAnnotationInstance() {
+        return parentAnnotationInstance;
+    }
+
+    public void setParentAnnotationInstance(AnnotationInstance parentAnnotationInstance) {
+        if (this.parentAnnotationInstance != null) {
+            if (this.parentAnnotationInstance.equals(parentAnnotationInstance)) return;
+            this.parentAnnotationInstance.getAttributes().remove(this);
+        }
+        this.parentAnnotationInstance = parentAnnotationInstance;
+        if (parentAnnotationInstance == null) return;
+        parentAnnotationInstance.getAttributes().add(this);
+    }
+    
+    private String value;
+    
+    @FameProperty(name = "value")
+    public String getValue() {
+        return value;
+    }
 
+    public void setValue(String value) {
+        this.value = value;
+    }
+    
+    private AnnotationTypeAttribute annotationTypeAttribute;
+    
+    @FameProperty(name = "annotationTypeAttribute", opposite = "annotationAttributeInstances")
+    public AnnotationTypeAttribute getAnnotationTypeAttribute() {
+        return annotationTypeAttribute;
+    }
+
+    public void setAnnotationTypeAttribute(AnnotationTypeAttribute annotationTypeAttribute) {
+        if (this.annotationTypeAttribute != null) {
+            if (this.annotationTypeAttribute.equals(annotationTypeAttribute)) return;
+            this.annotationTypeAttribute.getAnnotationAttributeInstances().remove(this);
+        }
+        this.annotationTypeAttribute = annotationTypeAttribute;
+        if (annotationTypeAttribute == null) return;
+        annotationTypeAttribute.getAnnotationAttributeInstances().add(this);
+    }
+    
+
 
 }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/FAMIXModel.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/FAMIXModel.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/FAMIXModel.java	(revision 85)
@@ -12,62 +12,63 @@
     }
     
     public static void importInto(MetaRepository metamodel) {
-		metamodel.with(fr.inria.verveine.core.gen.famix.EnumValue.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.CaughtException.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.LeafEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.SourcedEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Type.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.GlobalVariable.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterType.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Inheritance.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.PrimitiveType.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.JavaSourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.CSourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Comment.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationTypeAttribute.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Access.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.StructuralEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationTypeGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationInstance.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Exception.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.EnumValue.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Namespace.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Reference.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterizedType.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ThrownException.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.MethodGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Invocation.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.BehaviouralEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationType.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ClassGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.UnknownSourceLanguage.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ContainerEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.SourceTextAnchor.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.FileAnchor.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationTypeGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Exception.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.LocalVariable.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Enum.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.SmalltalkMonticelloSourceLanguage.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationTypeAttribute.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationInstanceAttribute.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Association.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Attribute.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ImplicitVariable.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.UnknownSourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.FileAnchor.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.ScopingEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterizableClass.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Namespace.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Module.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Package.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.CustomSourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ContainerEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.BehaviouralEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationType.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.LeafEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationInstanceAttribute.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Association.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Inheritance.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.SourcedEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.CaughtException.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterType.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.NamedEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Entity.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.DeclaredException.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.ImplicitVariable.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Class.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Comment.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Method.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.NamespaceGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.SourceAnchor.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.NamedEntity.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Module.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.GlobalVariableGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.CustomSourceLanguage.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Function.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Entity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.UnknownVariable.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ThrownException.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterizedType.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.StructuralEntity.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ClassGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.NamespaceGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.SmalltalkSourceLanguage.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.SourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.AnnotationInstance.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.GlobalVariable.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.Parameter.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.Enum.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.UnknownVariable.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.MethodGroup.class);
 		metamodel.with(fr.inria.verveine.core.gen.famix.PackageGroup.class);
-		metamodel.with(fr.inria.verveine.core.gen.famix.LocalVariable.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.SourceTextAnchor.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.JavaSourceLanguage.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Class.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.PrimitiveType.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Type.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.GlobalVariableGroup.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.ParameterizableClass.class);
+		metamodel.with(fr.inria.verveine.core.gen.famix.Function.class);
 
     }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstance.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstance.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/AnnotationInstance.java	(revision 85)
@@ -1,6 +1,7 @@
 // Automagically generated code, please do not change
 package fr.inria.verveine.core.gen.famix;
 
+import ch.akuhn.fame.internal.MultivalueSet;
 import java.util.*;
 import ch.akuhn.fame.FameProperty;
 import ch.akuhn.fame.FameDescription;
@@ -47,13 +48,61 @@
         annotationType.getInstances().add(this);
     }
     
-    @FameProperty(name = "attributes", derived = true)
+    private Collection<AnnotationInstanceAttribute> attributes; 
+
+    @FameProperty(name = "attributes", opposite = "parentAnnotationInstance", derived = true)
     public Collection<AnnotationInstanceAttribute> getAttributes() {
-        // TODO: this is a derived property, implement this method manually.
-    	return null;
+        if (attributes == null) {
+            attributes = new MultivalueSet<AnnotationInstanceAttribute>() {
+                @Override
+                protected void clearOpposite(AnnotationInstanceAttribute e) {
+                    e.setParentAnnotationInstance(null);
+                }
+                @Override
+                protected void setOpposite(AnnotationInstanceAttribute e) {
+                    e.setParentAnnotationInstance(AnnotationInstance.this);
+                }
+            };
+        }
+        return attributes;
     }
+    
+    public void setAttributes(Collection<? extends AnnotationInstanceAttribute> attributes) {
+        this.getAttributes().clear();
+        this.getAttributes().addAll(attributes);
+    }                    
+    
         
+    public void addAttributes(AnnotationInstanceAttribute one) {
+        this.getAttributes().add(one);
+    }   
+    
+    public void addAttributes(AnnotationInstanceAttribute one, AnnotationInstanceAttribute... many) {
+        this.getAttributes().add(one);
+        for (AnnotationInstanceAttribute each : many)
+            this.getAttributes().add(each);
+    }   
+    
+    public void addAttributes(Iterable<? extends AnnotationInstanceAttribute> many) {
+        for (AnnotationInstanceAttribute each : many)
+            this.getAttributes().add(each);
+    }   
+                
+    public void addAttributes(AnnotationInstanceAttribute[] many) {
+        for (AnnotationInstanceAttribute each : many)
+            this.getAttributes().add(each);
+    }
+    
+    public int numberOfAttributes() {
+        return getAttributes().size();
+    }
 
+    public boolean hasAttributes() {
+        return !getAttributes().isEmpty();
+    }
+    
+                
+
 
 }
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/SourceLanguage.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/SourceLanguage.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/SourceLanguage.java	(revision 85)
@@ -14,12 +14,6 @@
 
 
 
-    @FameProperty(name = "name", derived = true)
-    public String getName() {
-        // TODO: this is a derived property, implement this method manually.
-        throw new UnsupportedOperationException("Not yet implemented!");  
-    }
-    
     private Collection<SourcedEntity> sourcedEntities; 
 
     @FameProperty(name = "sourcedEntities", opposite = "declaredSourceLanguage", derived = true)
@@ -74,6 +68,14 @@
     }
     
                 
+    @FameProperty(name = "name", derived = true)
+    public String getName() {
+        // TODO: this is a derived property, implement this method manually.
+        //throw new UnsupportedOperationException("Not yet implemented!");
+    	String fullname = this.getClass().getName();
+    	return fullname.substring(0, fullname.indexOf("SourceLanguage"));
+    }
+    
 
 
 }
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/Class.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/Class.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/Class.java	(revision 85)
@@ -12,10 +12,11 @@
 
     public Class() {
 		super();
-		this.setIsInterface(Boolean.FALSE);
+		this.setIsInterface(Boolean.FALSE);  // by default assume a real class
 	}
 
-	@FameProperty(name = "isAbstract", derived = true)
+
+    @FameProperty(name = "isAbstract", derived = true)
     public Boolean getIsAbstract() {
         // TODO: this is a derived property, implement this method manually.
         return this.getModifiers().contains("abstract");
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/GlobalVariable.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/GlobalVariable.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/GlobalVariable.java	(revision 85)
@@ -14,35 +14,30 @@
 
     private ScopingEntity parentScope;
     
-    @FameProperty(name = "parentScope", opposite = "globalVariables")
+    @FameProperty(name = "parentScope")
     public ScopingEntity getParentScope() {
         return parentScope;
     }
 
-    @Override
-	public ContainerEntity getBelongsTo() {
-		return getParentScope();
-	}
-
     public void setParentScope(ScopingEntity parentScope) {
-        if (this.parentScope != null) {
-            if (this.parentScope.equals(parentScope)) return;
-            this.parentScope.getGlobalVariables().remove(this);
-        }
         this.parentScope = parentScope;
-        if (parentScope == null) return;
-        parentScope.getGlobalVariables().add(this);
     }
     
     private Module parentModule;
     
-    @FameProperty(name = "parentModule")
+    @FameProperty(name = "parentModule", opposite = "globalVariables")
     public Module getParentModule() {
         return parentModule;
     }
 
     public void setParentModule(Module parentModule) {
+        if (this.parentModule != null) {
+            if (this.parentModule.equals(parentModule)) return;
+            this.parentModule.getGlobalVariables().remove(this);
+        }
         this.parentModule = parentModule;
+        if (parentModule == null) return;
+        parentModule.getGlobalVariables().add(this);
     }
     
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/Type.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/Type.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/Type.java	(revision 85)
@@ -13,7 +13,8 @@
 public class Type extends ContainerEntity {
 
 
-	private Collection<Method> methods; 
+
+    private Collection<Method> methods; 
 
     @FameProperty(name = "methods", opposite = "parentType", derived = true)
     public Collection<Method> getMethods() {
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/Function.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/Function.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/Function.java	(revision 85)
@@ -14,30 +14,30 @@
 
     private ScopingEntity parentScope;
     
-    @FameProperty(name = "parentScope", opposite = "functions")
+    @FameProperty(name = "parentScope")
     public ScopingEntity getParentScope() {
         return parentScope;
     }
 
     public void setParentScope(ScopingEntity parentScope) {
-        if (this.parentScope != null) {
-            if (this.parentScope.equals(parentScope)) return;
-            this.parentScope.getFunctions().remove(this);
-        }
         this.parentScope = parentScope;
-        if (parentScope == null) return;
-        parentScope.getFunctions().add(this);
     }
     
     private Module parentModule;
     
-    @FameProperty(name = "parentModule")
+    @FameProperty(name = "parentModule", opposite = "functions")
     public Module getParentModule() {
         return parentModule;
     }
 
     public void setParentModule(Module parentModule) {
+        if (this.parentModule != null) {
+            if (this.parentModule.equals(parentModule)) return;
+            this.parentModule.getFunctions().remove(this);
+        }
         this.parentModule = parentModule;
+        if (parentModule == null) return;
+        parentModule.getFunctions().add(this);
     }
     
 
Index: verveine.core/src/fr/inria/verveine/core/gen/famix/ParameterizableClass.java
===================================================================
--- verveine.core/src/fr/inria/verveine/core/gen/famix/ParameterizableClass.java	(revision 84)
+++ verveine.core/src/fr/inria/verveine/core/gen/famix/ParameterizableClass.java	(revision 85)
@@ -11,6 +11,8 @@
 @FameDescription("ParameterizableClass")
 public class ParameterizableClass extends Class {
 
+
+
     @FameProperty(name = "parameters", derived = true)
     public Collection<ParameterType> getParameters() {
         // this is a derived property, implement this method manually.
